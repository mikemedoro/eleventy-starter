/*
 * Functions
 *
 * This file collects all of the functions used throughout the website.
 *
 *****************************************************************************/

/*
 * Native `url(..)` function wrapper
 *
 * @param {String} $base - base URL for the asset
 * @param {String} $type - asset type folder (e.g. `fonts/`)
 * @param {String} $path - asset path
 * @return {Url}
 *
 *********************************************************/

@function asset($base, $type, $path) {
    @return url($base+$type+$path);
}

/*
 * Returns URL to an image based on its path
 *
 * @param {String} $path - image path
 * @param {String} $base [$base-url] - base URL
 * @return {Url}
 * @require $base-url
 *
 *********************************************************/

@function image($path, $base: $base-url) {
    @return asset($base, 'images/', $path);
}

/*
 * Returns URL to a font based on its path
 *
 * @param {String} $path - font path
 * @param {String} $base [$base-url] - base URL
 * @return {Url}
 * @require $base-url
 *
 *********************************************************/

@function font($path, $base: $base-url) {
    @return asset($base, 'fonts/', $path);
}

/*
 * Fallback to PX value for browsers that don't support REM
 *
 *********************************************************/

@function calculateRem($font-size) {
    $rem-size: $font-size / $base-font-size;

    @return $rem-size * 1rem;
}

/*
 * Add white to a color
 *
 * @param {Color} $color
 * @param {Number} $percentage
 * @return {Color}
 *
 *********************************************************/

@function tint($color, $percentage) {
    @return mix(white, $color, $percentage);
}

/*
 * Add black to a color
 *
 * @param {Color} $color
 * @param {Number} $percentage
 * @return {Color}
 *
 *********************************************************/

@function shade($color, $percentage) {
    @return mix(black, $color, $percentage);
}
