/*
 * Mixins
 *
 * This file collects all of the mixins used throughout the website.
 *
 *****************************************************************************/

/*
 * Event wrapper
 *
 * @param {Bool} $self [false] - Whether or not to include
 current selector
 *
 *********************************************************/

@mixin on-event($self: false) {
    @if $self {
        &,
        &:hover,
        &:active,
        &:focus {
            @content;
        }
    } @else {
        &:hover,
        &:active,
        &:focus {
            @content;
        }
    }
}

/*
 * Make a context based selector a little more friendly
 *
 * @param {String} $context
 *
 *********************************************************/

@mixin when-inside($context) {
    #{$context} & {
        @content;
    }
}

/*
 * Make certain fonts render sharper on OSX
 *
 *********************************************************/

@mixin font-smoothing {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/*
 * Clearfix
 *
 *********************************************************/

@mixin clearfix {
    &::after {
        clear: both;
        content: '';
        display: table;
    }
}

/*
 * Maintain aspect ratio on divs with background images
 * (mimic native image scaling)
 *
 * @include responsive-ratio(16,9);
 *
 *********************************************************/

@mixin responsive-ratio($x, $y, $pseudo: false) {
    $padding: unquote(($y / $x) * 100 + '%');
    @if $pseudo {
        &::before {
            @include pseudo($pos: relative);

            padding-top: $padding;
            width: 100%;
        }
    } @else {
        padding-top: $padding;
    }
}

/*
 * Background opacity with fallback for older browsers
 *
 *********************************************************/

@mixin bg-opacity($color, $opacity: 0.3) {
    background-color: $color;
    background-color: rgba($color, $opacity);
}

/*
 * Create a transparent overlay
 *
 *********************************************************/

@mixin overlay($color, $opacity: 0.3, $z: 1) {
    background-color: $color;
    background-color: rgba($color, $opacity);
    content: '';
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: $z;
}

/*
 * Visually hide element
 *
 *********************************************************/

@mixin hide {
    opacity: 0;
    visibility: hidden;
}

/*
 * Visually show element
 *
 *********************************************************/
@mixin show {
    opacity: 1;
    visibility: visible;
}

/*
 * Create background image that centers & covers parent
 * container
 *
 *********************************************************/

@mixin bg-image-cover($color: transparent, $image: none) {
    background: $color $image no-repeat center center;
    background-size: cover;
}

/*
 * Add common rules to pseudo elements
 *
 *********************************************************/

@mixin pseudo($display: block, $pos: absolute, $content: '') {
    content: $content;
    display: $display;
    position: $pos;
}

/*
 * Enable hardware acceleration
 *
 *********************************************************/

@mixin hardware($backface: true, $perspective: 1000) {
    @if $backface {
        backface-visibility: hidden;
    }

    perspective: $perspective;
}

/*
 * Position
 *
 *********************************************************/

@mixin position($pos, $t, $r, $b, $l, $z: false, $hardware: true) {
    @if $pos == fixed and $hardware {
        @include hardware;
    }
    @if $pos {
        position: $pos;
    }
    @if $t {
        top: $t;
    }
    @if $r {
        right: $r;
    }
    @if $b {
        bottom: $b;
    }
    @if $l {
        left: $l;
    }
    @if $z {
        z-index: $z;
    }
}

/*
 * Size
 *
 *********************************************************/

@mixin size($width, $height: false) {
    width: $width;

    @if ($height) {
        height: $height;
    } @else {
        height: $width;
    }
}

/*
 * Font Size with PX fallback
 *
 *********************************************************/

@mixin font-size($font-size) {
    font-size: $font-size;
    font-size: calculateRem($font-size);
}

/*
 * Margin Auto center
 *
 *********************************************************/

@mixin auto {
    margin-left: auto;
    margin-right: auto;
}

/*
 * Screen-reader text
 *
 *********************************************************/

@mixin screen-reader {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * CSS Triangles
 *
 *********************************************************/

@mixin css-triangle(
    $color,
    $direction,
    $size: 6px,
    $position: absolute,
    $round: false
) {
    @include pseudo($pos: $position);

    height: 0;
    width: 0;

    @if $round {
        border-radius: 3px;
    }
    @if $direction == down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round($size / 2.5);
    } @else if $direction == up {
        border-bottom: $size solid $color;
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        margin-bottom: 0 - round($size / 2.5);
    } @else if $direction == right {
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        border-top: $size solid transparent;
        margin-right: -$size;
    } @else if $direction == left {
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        border-top: $size solid transparent;
        margin-left: -$size;
    }
}
